// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function logMe(x) {
  console.log(x);
  return x;
}

function add(x, y) {
  return x + y | 0;
}

function subtract(l, r) {
  return l - r | 0;
}

function areEvenlyDivisible(dividend, divisor) {
  return Caml_int32.mod_(dividend, divisor) === 0;
}

var Int = /* module */[
  /* add */add,
  /* subtract */subtract,
  /* areEvenlyDivisible */areEvenlyDivisible
];

function last(x) {
  return List.hd(List.rev(x));
}

var List$1 = /* module */[/* last */last];

function apply(f, param) {
  return Curry._2(f, param[0], param[1]);
}

var Binary = /* module */[/* apply */apply];

var Fn = /* module */[/* Binary */Binary];

exports.logMe = logMe;
exports.Int = Int;
exports.List = List$1;
exports.Fn = Fn;
/* No side effect */
